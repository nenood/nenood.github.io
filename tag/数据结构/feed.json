{
    "version": "https://jsonfeed.org/version/1",
    "title": "N.E.O.D • All posts by \"数据结构\" tag",
    "description": "To chronicle certain moments.",
    "home_page_url": "https://nenood.xyz",
    "items": [
        {
            "id": "https://nenood.xyz/2024/01/20/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF%E9%A2%98-%E8%90%A5%E5%9C%B0%E4%BA%BA%E6%95%B0%EF%BC%88%E8%BD%AC%E8%87%AAPecco%EF%BC%89/",
            "url": "https://nenood.xyz/2024/01/20/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E6%A8%A1%E6%9D%BF%E9%A2%98-%E8%90%A5%E5%9C%B0%E4%BA%BA%E6%95%B0%EF%BC%88%E8%BD%AC%E8%87%AAPecco%EF%BC%89/",
            "title": "树状数组模板题-营地人数（转自Pecco）",
            "date_published": "2024-01-20T06:47:49.000Z",
            "content_html": "<p><img  \n                       lazyload\n                       alt=\"image\"\n                       data-src=\"https://cdn.jsdelivr.net/gh/nenood/pic_for_blogs@main/img/image-20240120221838612.png\"\n                        alt=\"\"\n                 ></p>\n<span id=\"more\"></span>\n<p><a class=\"link\"   href=\"https://zhuanlan.zhihu.com/p/93795692\" >算法学习笔记(2) : 树状数组 - 知乎 (zhihu.com)<i class=\"fas fa-external-link-alt\"></i></a></p>\n<h4 id=\"question-1\"><a href=\"#question-1\" class=\"headerlink\" title=\"question 1\"></a>question 1</h4><p><strong>input</strong><br>第一行一个整数 <code>T</code>，表示有 T 组数据。<br>每组数据第一行一个正整数 <code>N</code>（N&lt;=50000）,表示敌人有N个工兵营地，接下来有N个正整数,第i个正整数a<sub>i</sub>代表第i个工兵营地里开始时有 a<sub>i</sub> 个人（1&lt;=a<sub>i</sub>&lt;=50）。<br>接下来每行有一条命令，命令有4种形式：<br>(1) <code>Add i j</code>,i和j为正整数,表示第i个营地增加j个人（j不超过30）<br>(2) <code>Sub i j</code>,i 和 j 为正整数,表示第 i 个营地减少 j 个人（j 不超过30）;<br>(3) <code>Query i j</code>,i 和 j 为正整数,i&lt;=j，表示询问第 i 到第 j 个营地的总人数;<br>(4) <code>End</code> 表示结束，这条命令在每组数据最后出现;<br><strong>output</strong><br>对第 i 组数据,首先输出“Case i:”和回车,<br>对于每个Query询问，输出一个整数并回车,表示询问的段中的总人数,这个数保持在int以内<br><!--more--></p>\n<h4 id=\"key\"><a href=\"#key\" class=\"headerlink\" title=\"key\"></a>key</h4><p>BIT</p>\n<h4 id=\"answer\"><a href=\"#answer\" class=\"headerlink\" title=\"answer\"></a>answer</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> endl <span class=\"string\">&quot;\\n&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> lowbit(x) ((x) &amp; (-x))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAXN 50005</span></span><br><span class=\"line\">using namespace <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> tree[MAXN] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// update nodes</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(<span class=\"type\">int</span> i, <span class=\"type\">int</span> x)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> pos = i; pos &lt; MAXN; pos += lowbit(x))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        tree[pos] += x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// query the sum of n</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">query</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = n; i; i -= lowbit(i))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ans += tree[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// query the sum from a to b</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">query</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> query(b) - query(a);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= t; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&quot;Case&quot;</span> &lt;&lt; i &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> n;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> x;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; x;</span><br><span class=\"line\">            update(i, x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">char</span> opr[<span class=\"number\">10</span>];</span><br><span class=\"line\">        <span class=\"type\">int</span> a, b;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"built_in\">cin</span> &gt;&gt; opr, opr[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;E&#x27;</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (opr[<span class=\"number\">0</span>])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span>:</span><br><span class=\"line\">                <span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">                update(a, b);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;S&#x27;</span>:</span><br><span class=\"line\">                <span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">                update(a, -b);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;Q&#x27;</span>:</span><br><span class=\"line\">                <span class=\"built_in\">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span> &lt;&lt; query(a, b) &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "数据结构"
            ]
        }
    ]
}