{
    "version": "https://jsonfeed.org/version/1",
    "title": "N.E.O.D • All posts by \"stl\" tag",
    "description": "To chronicle certain moments.",
    "home_page_url": "https://nenood.xyz",
    "items": [
        {
            "id": "https://nenood.xyz/2024/01/27/2024-1-%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8-2/",
            "url": "https://nenood.xyz/2024/01/27/2024-1-%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8-2/",
            "title": "2024-1-寒假第一周-2",
            "date_published": "2024-01-27T09:08:55.000Z",
            "content_html": "<p>周四又布置了几道</p>\n<span id=\"more\"></span>\n<h2 id=\"Q-J-机器翻译\"><a href=\"#Q-J-机器翻译\" class=\"headerlink\" title=\"Q_J 机器翻译\"></a>Q_J 机器翻译</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P1540\" >P1540 [NOIP2010 提高组] 机器翻译<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>明示使用队列，若队列大小大于<code>m</code>则队首元素出队列</p>\n<p>使用<code>dic[]</code>记录元素是否在队列内（<code>queue</code>没有<code>find()</code>函数），<code>cnt</code>记录查找次数</p>\n<p>若不在队列则<code>cnt++</code>并且元素入队列且<code>dic[i] = 1</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> dic[<span class=\"number\">1001</span>], query; <span class=\"comment\">// 分别记录 某元素是否在栈中 与 查询元素</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    queue&lt;<span class=\"type\">int</span>&gt; q;</span><br><span class=\"line\">    <span class=\"type\">int</span> m, n, cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; query;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dic[query])</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>; <span class=\"comment\">// 若在栈中则下一循环</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!dic[query])</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cnt++;</span><br><span class=\"line\">            q.<span class=\"built_in\">push</span>(query);</span><br><span class=\"line\">            <span class=\"comment\">// cout &lt;&lt; &quot;query: &quot; &lt;&lt; query &lt;&lt; endl;</span></span><br><span class=\"line\">            dic[query] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (q.<span class=\"built_in\">size</span>() &gt; m)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                dic[q.<span class=\"built_in\">front</span>()] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"comment\">// cout &lt;&lt; &quot;pop: &quot; &lt;&lt; q.front() &lt;&lt; endl;</span></span><br><span class=\"line\">                q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; cnt;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Q-K-后缀表达式\"><a href=\"#Q-K-后缀表达式\" class=\"headerlink\" title=\"Q_K 后缀表达式\"></a>Q_K 后缀表达式</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P1449\" >P1449 后缀表达式<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>使用栈，string存储后缀表达式，遍历string</p>\n<p>为应对10以上的数，使用<code>l</code> <code>n</code>分别记录上次读取的数与本次读取的数</p>\n<p>若遍历字符为运算符则出栈两个元素，运算后入栈</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string str;</span><br><span class=\"line\">    stack&lt;<span class=\"type\">int</span>&gt; q;</span><br><span class=\"line\">    <span class=\"type\">int</span> l = <span class=\"number\">0</span>, n = <span class=\"number\">0</span>;</span><br><span class=\"line\">    cin &gt;&gt; str;</span><br><span class=\"line\">    <span class=\"type\">int</span> a, b;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; str[i] != <span class=\"string\">&#x27;@&#x27;</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&#x27;0&#x27;</span> &lt;= str[i] &amp;&amp; str[i] &lt;= <span class=\"string\">&#x27;9&#x27;</span>)</span><br><span class=\"line\">        &#123; <span class=\"comment\">// 若遍历字符为数字</span></span><br><span class=\"line\">            n = str[i] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i - <span class=\"number\">1</span> &gt;= <span class=\"number\">0</span> &amp;&amp; <span class=\"string\">&#x27;0&#x27;</span> &lt;= str[i - <span class=\"number\">1</span>] &amp;&amp; str[i - <span class=\"number\">1</span>] &lt;= <span class=\"string\">&#x27;9&#x27;</span>)</span><br><span class=\"line\">            &#123; <span class=\"comment\">// 若上一次读取的也为数字，则二者结合</span></span><br><span class=\"line\">                n = l * <span class=\"number\">10</span> + n;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            l = n;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (str[i + <span class=\"number\">1</span>] == <span class=\"string\">&#x27;.&#x27;</span>)</span><br><span class=\"line\">            &#123; <span class=\"comment\">// &#x27;.&#x27;代表一次读取结束，元素入栈</span></span><br><span class=\"line\">                q.<span class=\"built_in\">push</span>(n);</span><br><span class=\"line\">                <span class=\"comment\">// cout &lt;&lt; &quot;push: &quot; &lt;&lt; n &lt;&lt; endl;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (str[i] == <span class=\"string\">&#x27;+&#x27;</span> || str[i] == <span class=\"string\">&#x27;-&#x27;</span> || str[i] == <span class=\"string\">&#x27;*&#x27;</span> || str[i] == <span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\">        &#123; <span class=\"comment\">// 若遍历至运算符</span></span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (str[i])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;+&#x27;</span>:</span><br><span class=\"line\">                a = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">                b = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">                a = b + a;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;-&#x27;</span>:</span><br><span class=\"line\">                a = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">                b = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">                a = b - a;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;*&#x27;</span>:</span><br><span class=\"line\">                a = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">                b = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">                a = b * a;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;/&#x27;</span>:</span><br><span class=\"line\">                a = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">                b = q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">                q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">                a = b / a;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            q.<span class=\"built_in\">push</span>(a); <span class=\"comment\">// 运算后入栈</span></span><br><span class=\"line\">            <span class=\"comment\">// cout &lt;&lt; a &lt;&lt; endl;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; q.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Q-L-Bad-Hair-Day-S\"><a href=\"#Q-L-Bad-Hair-Day-S\" class=\"headerlink\" title=\"Q_L Bad Hair Day S\"></a>Q_L Bad Hair Day S</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/P2866\" >P2866 [USACO06NOV] Bad Hair Day S<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>本题做的时候没想到…看到题解才懂的关键想法：</p>\n<div class=\"keep-note info\"><p>“每头牛<strong>看到的</strong>多少牛的总和 等于 每头牛<strong>被多少牛看到</strong>的总和” </p>\n</div>\n<hr>\n<p>以样例输入<code>10 3 7 4 12 2</code>为例：</p>\n<p>第一头牛被0头牛看到（它的前面没有牛）</p>\n<p>第二头为1（第一头）</p>\n<p>第三头为1（第一头）</p>\n<p>第四头为2（第一、三头，第二头被第三头挡住）</p>\n<p>第五头为0（它最高）</p>\n<p>第六头为1（第五头，其他牛被第五头挡住）</p>\n<p>总和亦为5</p>\n<hr>\n<p>因此使用栈，每次输入元素</p>\n<p><strong>若栈非空</strong> 且 <strong>当前元素比栈顶元素大</strong> 则 栈顶元素弹出</p>\n<p>剩下的牛<strong>均能</strong>看到当前牛，只需<code>ans += s.size();</code>即可</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    stack&lt;ll&gt; s;</span><br><span class=\"line\">    ll n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    ll ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (ll i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ll t;</span><br><span class=\"line\">        cin &gt;&gt; t;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!s.<span class=\"built_in\">empty</span>() &amp;&amp; t &gt;= s.<span class=\"built_in\">top</span>())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            s.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans += s.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        s.<span class=\"built_in\">push</span>(t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; ans;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>~唉本来打算用二维偏序做的，写了一大堆发现根本做不了，看题解发现可以用线段树，马上就学/(ㄒoㄒ)/~</p>\n<h2 id=\"Q-M-Ananagrams\"><a href=\"#Q-M-Ananagrams\" class=\"headerlink\" title=\"Q_M Ananagrams\"></a>Q_M Ananagrams</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/UVA156\" >反片语 Ananagrams<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p><strong>分析题目：</strong></p>\n<p>要找到非变位词，只需对所有输入的单词进行标准化，先转为小写再按字典序重新排列统一</p>\n<p>统计每个标准化后的词出现的次数，若次数等于1则为非变位词</p>\n<p><strong>处理输入数据：</strong></p>\n<p>所以使用<code>map</code>记录每个单词出现的次数</p>\n<p>若<code>map.count(string)</code>为0则将该单词加入<code>map</code>且出现次数加一</p>\n<p>若为1则直接加一</p>\n<p><strong>解析得到答案：</strong></p>\n<p>再次对单词进行遍历，每次对该单词进行标准化，查看其出现次数</p>\n<p>次数为1则加入<code>ans</code>，最终对<code>ans</code>排序后输出</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">string <span class=\"title\">normalize</span><span class=\"params\">(string s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string a = s;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> &amp;i : a) <span class=\"comment\">// 此处一定要加 &amp;引用，不然无法转小写，做的时候就是死在这里/(ㄒoㄒ)/~~</span></span><br><span class=\"line\">        i = <span class=\"built_in\">tolower</span>(i);</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(a.<span class=\"built_in\">begin</span>(), a.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;string&gt; str;</span><br><span class=\"line\">    map&lt;string, <span class=\"type\">int</span>&gt; cnt;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>;; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string s;</span><br><span class=\"line\">        cin &gt;&gt; s;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s == <span class=\"string\">&quot;#&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        str.<span class=\"built_in\">push_back</span>(s);</span><br><span class=\"line\">        string a = <span class=\"built_in\">normalize</span>(s);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!cnt.<span class=\"built_in\">count</span>(a))</span><br><span class=\"line\">            cnt[a] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        cnt[a]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    vector&lt;string&gt; ans;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i : str)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string a = <span class=\"built_in\">normalize</span>(i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cnt[a] == <span class=\"number\">1</span>)</span><br><span class=\"line\">            ans.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(ans.<span class=\"built_in\">begin</span>(), ans.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i : ans)</span><br><span class=\"line\">        cout &lt;&lt; i &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">ladder came tape soon leader acme RIDE lone Dreis peat</span></span><br><span class=\"line\"><span class=\"comment\">    ScAlE orb eye Rides dealer NotE derail LaCeS drIed</span></span><br><span class=\"line\"><span class=\"comment\">        noel dire Disk mace Rob dries</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Q-N-Babelfish\"><a href=\"#Q-N-Babelfish\" class=\"headerlink\" title=\"Q_N Babelfish\"></a>Q_N Babelfish</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/UVA10282\" >Babelfish<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>大水题，<code>map</code>解决</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    unordered_map&lt;string, string&gt; m;</span><br><span class=\"line\">    string a, b;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; a;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">getchar</span>() == <span class=\"string\">&#x27; &#x27;</span>)</span><br><span class=\"line\">            cin &gt;&gt; b;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        m[b] = a;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; m[a] &lt;&lt; endl; <span class=\"comment\">// 前面已经输入了一个a作为查询单词了</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (cin &gt;&gt; a)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m.<span class=\"built_in\">count</span>(a))</span><br><span class=\"line\">            cout &lt;&lt; m[a] &lt;&lt; endl;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;eh&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "STL"
            ]
        },
        {
            "id": "https://nenood.xyz/2024/01/23/2024-1-%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8-1/",
            "url": "https://nenood.xyz/2024/01/23/2024-1-%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8-1/",
            "title": "2024.1-寒假第一周-1",
            "date_published": "2024-01-23T01:50:56.000Z",
            "content_html": "<p><img  \n                       lazyload\n                       alt=\"image\"\n                       data-src=\"https://cdn.jsdelivr.net/gh/nenood/pic_for_blogs@main/img/2024-01-23_095221.png\"\n                        alt=\"\"\n                 ></p>\n<p><del>很好寒假第一周，是我的脑袋旋转</del></p>\n<p>题目虽然都比较简单，但是一些题目还是会卡很久，STL库还是没怎么用好</p>\n<p>于是决定在写完题目的第二天写个小的题解给自己看看</p>\n<p><strong># Tips</strong>：PC端可以点击左侧<code>文章目录</code>快速转至目标题目</p>\n<span id=\"more\"></span>\n<hr>\n<h2 id=\"Q-A-2D-SORT\"><a href=\"#Q-A-2D-SORT\" class=\"headerlink\" title=\"Q_A - 2D-SORT\"></a>Q_A - 2D-SORT</h2><p>原题没找到，大致就是输入点的坐标，按照要求以升序给点排序，sort的简单运用</p>\n<p><code>(x1, y1) &gt; (x2, y2) if and only if (x1 &gt; x2) or (x1 == x2 and y1 &lt; y2)</code></p>\n<p>只需要多写一个<code>bool cmp()</code>函数就行：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">cda</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ll x;</span><br><span class=\"line\">    ll y;</span><br><span class=\"line\">&#125; cdax[<span class=\"number\">100005</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(cda a, cda b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> !((a.x &gt; b.x) || (a.x == b.x &amp;&amp; a.y &lt; b.y));</span><br><span class=\"line\">&#125; <span class=\"comment\">// 因为是升序排列所以前面加上！</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>题目给出的数据量：<br>1 &lt;= t &lt;= 10</p>\n<p>1 &lt;= n &lt;= 100000</p>\n<p>-10^9 &lt;= coordinates &lt;= 10^9<br>所以要开long long</p>\n</li>\n</ul>\n<h2 id=\"Q-B-HELP-NERUBAN\"><a href=\"#Q-B-HELP-NERUBAN\" class=\"headerlink\" title=\"Q_B - HELP NERUBAN\"></a>Q_B - HELP NERUBAN</h2><p>原题也没找到，题目概述就是输入一个英雄的四个属性</p>\n<p>姓名、a（精准度）、v（速度）、s（笨拙度）</p>\n<p>根据a&gt;v&gt;s&gt;姓名字典序对英雄进行排序</p>\n<p>也是sort的简单应用，只不过cmp函数复杂一点点：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">hero</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    string n;</span><br><span class=\"line\">    <span class=\"type\">int</span> v;</span><br><span class=\"line\">    <span class=\"type\">int</span> s;</span><br><span class=\"line\">    <span class=\"type\">int</span> a;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(hero x, hero y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (x.a &gt; y.a) || (x.a == y.a &amp;&amp; x.v &gt; y.v) || (x.a == y.a &amp;&amp; x.v == y.v &amp;&amp; x.s &lt; y.s) || (x.a == y.a &amp;&amp; x.v == y.v &amp;&amp; x.s == y.s &amp;&amp; x.n &lt; y.n);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里的cmp函数不压行写可以像下面这样：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(hero x, hero y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x.a != y.a)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x.a &gt; y.a;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x.v != y.v)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x.v &gt; y.v;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x.s != y.s)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x.s &lt; y.s;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x.n &lt; y.n;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Q-C-Petya-and-Strings\"><a href=\"#Q-C-Petya-and-Strings\" class=\"headerlink\" title=\"Q_C - Petya and Strings\"></a>Q_C - Petya and Strings</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/CF112A\" >Petya and Strings<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>转换成小写后比较string大小就行</p>\n<p>这里有一个transform的运用：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">transform</span>(s.<span class=\"built_in\">begin</span>(), s.<span class=\"built_in\">end</span>(), s.<span class=\"built_in\">begin</span>(), ::tolower);</span><br></pre></td></tr></table></figure>\n<p>也就不必for循环转小写了</p>\n<h2 id=\"Q-D-Indian-Summer\"><a href=\"#Q-D-Indian-Summer\" class=\"headerlink\" title=\"Q_D - Indian Summer\"></a>Q_D - Indian Summer</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/CF44A\" >Indian Summer<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>用<code>set</code>和<code>make pair</code>建立一个以<code>pair</code>为元素的<code>set</code>就行，最终的<code>map.size()</code>就是answer：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    ios_base::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"literal\">false</span>);</span><br><span class=\"line\">    set&lt;pair&lt;string, string&gt;&gt; leaves;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string t, l;</span><br><span class=\"line\">        cin &gt;&gt; t &gt;&gt; l;</span><br><span class=\"line\">        leaves.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(t, l));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; leaves.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Q-E-Plug-in\"><a href=\"#Q-E-Plug-in\" class=\"headerlink\" title=\"Q_E - Plug-in\"></a>Q_E - Plug-in</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/CF81A\" >Plug-in<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>本题考察栈的运用（以及对题目的理解），对输入的字符串，挨个将字符压至栈顶</p>\n<ol>\n<li>若字符与栈顶元素相同则<strong>不压入</strong>且弹出栈顶元素（删除了这一对相邻的相同字符）</li>\n<li>若字符与栈顶元素不同或<strong>栈为空</strong>则压至栈顶</li>\n<li>由于第一个元素在栈底，所以需要倒序输出</li>\n<li>题干中写道“删除<strong>一对</strong>字符”，所以说若输入为<code>aaab</code>则应该输出<code>ab</code>（可恶就是因为这个卡半天）</li>\n</ol>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    stack&lt;<span class=\"type\">char</span>&gt; s;</span><br><span class=\"line\">    string str, ans;</span><br><span class=\"line\">    <span class=\"built_in\">getline</span>(cin, str);</span><br><span class=\"line\">    <span class=\"type\">int</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i : str)</span><br><span class=\"line\">        !s.<span class=\"built_in\">empty</span>() &amp;&amp; i == s.<span class=\"built_in\">top</span>() ? s.<span class=\"built_in\">pop</span>() : s.<span class=\"built_in\">push</span>(i); <span class=\"comment\">// 出栈与入栈</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!s.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        ans = s.<span class=\"built_in\">top</span>() + ans; <span class=\"comment\">// 倒序安置字符</span></span><br><span class=\"line\">        s.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; ans;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Q-F-Radio-Station\"><a href=\"#Q-F-Radio-Station\" class=\"headerlink\" title=\"Q_F - Radio Station\"></a>Q_F - Radio Station</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/CF918B\" >Radio Station<i class=\"fas fa-external-link-alt\"></i></a>（本文图片就出自此题）</li>\n</ul>\n<p>可以用string数组+struct，输入查询后就从数组内find</p>\n<p>也可以使用map，查找更快</p>\n<ul>\n<li><p>struct做法</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">ip</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    string name[<span class=\"number\">1005</span>];</span><br><span class=\"line\">    string ip[<span class=\"number\">1005</span>];</span><br><span class=\"line\">&#125; cur, query;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; cur.name[i] &gt;&gt; cur.ip[i];</span><br><span class=\"line\">        cur.ip[i] += <span class=\"string\">&#x27;;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; query.name[i] &gt;&gt; query.ip[i];</span><br><span class=\"line\">        <span class=\"keyword\">auto</span> it = <span class=\"built_in\">find</span>(cur.ip, cur.ip + n, query.ip[i]);</span><br><span class=\"line\">        <span class=\"type\">int</span> ind = it - cur.ip;</span><br><span class=\"line\">        cout &lt;&lt; query.name[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; query.ip[i] &lt;&lt; <span class=\"string\">&quot; #&quot;</span> &lt;&lt; cur.name[ind] &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>map做法</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    map&lt;string, string&gt; mp;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string name, ip;</span><br><span class=\"line\">        cin &gt;&gt; name &gt;&gt; ip;</span><br><span class=\"line\">        ip += <span class=\"string\">&#x27;;&#x27;</span>; <span class=\"comment\">// 眼睛要好...题目输入中查询项后面多了个;又是一个可恶的坑ε=( o｀ω′)ノ</span></span><br><span class=\"line\">        mp[ip] = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string name, ip;</span><br><span class=\"line\">        cin &gt;&gt; name &gt;&gt; ip;</span><br><span class=\"line\">        cout &lt;&lt; name &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; ip &lt;&lt; <span class=\"string\">&quot; #&quot;</span> &lt;&lt; mp[ip] &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Q-G-Registration-System\"><a href=\"#Q-G-Registration-System\" class=\"headerlink\" title=\"Q_G - Registration System\"></a>Q_G - Registration System</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/CF4C\" >Registration system<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p><del>我又要说了，map真好用</del></p>\n<p>建立map从string到string存在数的映射</p>\n<p>使用<code>map.find(key)</code>来查找是否存在该key，若存在则<code>map[key]++</code>，反之<code>map[key] = value</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    map&lt;string, <span class=\"type\">int</span>&gt; name;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string str;</span><br><span class=\"line\">        cin &gt;&gt; str;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (name.<span class=\"built_in\">find</span>(str) == name.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            name[str] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;OK&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            name[str]++;</span><br><span class=\"line\">            cout &lt;&lt; str &lt;&lt; name[str];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Q-H-Tea-Queue\"><a href=\"#Q-H-Tea-Queue\" class=\"headerlink\" title=\"Q_H - Tea Queue\"></a>Q_H - Tea Queue</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/CF920B\" >Tea Queue<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>模拟题意即可</p>\n<ol>\n<li><p>使用<code>time[MAXN]</code>记录每一秒是否有人</p>\n</li>\n<li><p>使用<code>struct</code>记录学生状态（开始等待时间<code>l</code>，结束等待时间<code>r</code>，喝到茶的时间<code>get</code>，学生的索引<code>ind</code>)</p>\n</li>\n</ol>\n<p>因为要确保先处理最先喝到茶的学生的状态，所以需要对学生根据时间进行排序（先喝到茶的学生索引不一定在最前面），因此我们保存两份学生状态，一份用于记录，一份用于排序后处理</p>\n<p>如果没人则喝上茶并记录<code>time[i] = 1</code>且记录喝到茶的时间为<code>i</code>，反之则向后循环查找是否有没人的时间</p>\n<p>若直到自己第<code>r</code>秒的时候都没喝上则为<code>0</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">que</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> l;</span><br><span class=\"line\">    <span class=\"type\">int</span> r;</span><br><span class=\"line\">    <span class=\"type\">int</span> ind;</span><br><span class=\"line\">    <span class=\"type\">int</span> get;</span><br><span class=\"line\">&#125; stu[<span class=\"number\">1000</span>], stux[<span class=\"number\">1000</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(que a, que b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.l &lt; b.l || (a.l == b.l &amp;&amp; a.ind &lt; b.ind);</span><br><span class=\"line\">    <span class=\"comment\">// 时间早的排在前面，时间相同则索引小的排在前面</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t, n;</span><br><span class=\"line\">    <span class=\"type\">int</span> time[<span class=\"number\">5000</span>];</span><br><span class=\"line\">    cin &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (t--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">fill</span>(time, time + <span class=\"number\">5000</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        cin &gt;&gt; n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cin &gt;&gt; stu[i].l &gt;&gt; stu[i].r;</span><br><span class=\"line\">            stux[i].l = stu[i].l;</span><br><span class=\"line\">            stux[i].r = stu[i].r;</span><br><span class=\"line\">            stux[i].ind = i;</span><br><span class=\"line\">            stu[i].ind = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">sort</span>(stux, stux + n, cmp);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            stu[stux[i].ind].get = <span class=\"number\">0</span>; <span class=\"comment\">// 先记录喝到茶的时间为0，喝到茶则更新，喝不到则一直为0</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = stux[i].l; j &lt;= stux[i].r; j++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (time[j] == <span class=\"number\">1</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    stu[stux[i].ind].get = j; <span class=\"comment\">// </span></span><br><span class=\"line\">                    time[j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>; <span class=\"comment\">// 喝到茶了，退出当前学生的循环，对下一个学生进行处理</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">            cout &lt;&lt; stu[i].get &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        cout &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Q-I-Lecture\"><a href=\"#Q-I-Lecture\" class=\"headerlink\" title=\"Q_I - Lecture\"></a>Q_I - Lecture</h2><ul>\n<li><a class=\"link\"   href=\"https://www.luogu.com.cn/problem/CF499B\" >Lecture<i class=\"fas fa-external-link-alt\"></i></a></li>\n</ul>\n<p>可以使用<code>map</code>，也可以使用<code>pair</code>，显然前者方便（但是笔者实际做题是并未想到用map…）</p>\n<p>这里只给出使用<code>map</code>的做法</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    map&lt;string, string&gt; mp;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (m--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string ls, lt;</span><br><span class=\"line\">        cin &gt;&gt; ls &gt;&gt; lt;</span><br><span class=\"line\">        mp[ls] = lt;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        string str;</span><br><span class=\"line\">        cin &gt;&gt; str;</span><br><span class=\"line\">        cout &lt;&lt; ((str.<span class=\"built_in\">size</span>() &gt; mp[str].<span class=\"built_in\">size</span>()) ? mp[str] : str) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "STL"
            ]
        }
    ]
}